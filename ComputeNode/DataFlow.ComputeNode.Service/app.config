<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity"
             type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <sectionGroup name="dataflow">
      <section name="computeNode"
               allowDefinition="Everywhere"
               type="AISTek.DataFlow.ComputeNode.Service.Configuration.ComputeNodeConfiguration, DataFlow.ComputeNode.Service" />
    </sectionGroup>
  </configSections>

  <unity>
    <typeAliases>
      <typeAlias alias="singleton"
                 type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
    </typeAliases>
    <containers>
      <container>
        <types>
          <type type="AISTek.DataFlow.ComputeNode.Service.WebInterfaceHostService, DataFlow.ComputeNode.Service"
                mapTo="AISTek.DataFlow.ComputeNode.Service.WebInterfaceHostService, DataFlow.ComputeNode.Service">
            <lifetime type="singleton" />
          </type>

          <type type="AISTek.DataFlow.ComputeNode.Service.WebView.IWebInterface, DataFlow.ComputeNode.Service"
                mapTo="AISTek.DataFlow.ComputeNode.Service.WebView.WebInterface, DataFlow.ComputeNode.Service">
            <lifetime type="singleton" />
          </type>

          <type type="AISTek.DataFlow.ComputeNode.Service.WebView.IWebInterfaceBuilder, DataFlow.ComputeNode.Service"
                mapTo="AISTek.DataFlow.ComputeNode.Service.WebView.WebInterfaceBuilder, DataFlow.ComputeNode.Service">
          </type>
          
          <type type="AISTek.DataFlow.ComputeNode.Classes.IExecutionStatus, DataFlow.ComputeNode.Classes"
                mapTo="AISTek.DataFlow.ComputeNode.Service.ExecutionStatus, DataFlow.ComputeNode.Service">
            <lifetime type="singleton" />
          </type>
          
          <type type="AISTek.DataFlow.ComputeNode.Classes.IExecutionCoreConfiguration, DataFlow.ComputeNode.Classes"
                mapTo="AISTek.DataFlow.ComputeNode.Service.Configuration.ExecutionCoreConfiguration, DataFlow.ComputeNode.Service">
          </type>
          <type type="AISTek.DataFlow.Shared.Classes.ISystemResources, DataFlow.Shared.Classes"
                mapTo="AISTek.DataFlow.ComputeNode.Service.SystemResourceProviders.SystemResources, DataFlow.ComputeNode.Service">
          </type>
          <type type="AISTek.DataFlow.Shared.Client.ITaskProviderClientFactory, DataFlow.Shared.Client"
                mapTo="AISTek.DataFlow.Shared.Client.TaskProviderClientFactory, DataFlow.Shared.Client">
          </type>
          <type type="AISTek.DataFlow.Shared.Client.IRepositoryClientFactory, DataFlow.Shared.Client"
                mapTo="AISTek.DataFlow.Shared.Client.RepositoryClientFactory, DataFlow.Shared.Client">
          </type>
          <type type="AISTek.DataFlow.ComputeNode.Classes.IExecutionCore, DataFlow.ComputeNode.Classes"
                mapTo="AISTek.DataFlow.ComputeNode.ExecutionCore.GeneralCore, DataFlow.ComputeNode.ExecutionCore">
          </type>
          <type type="AISTek.DataFlow.ComputeNode.Classes.IExecutionEngine, DataFlow.ComputeNode.Classes"
                mapTo="AISTek.DataFlow.ComputeNode.Engine.SandboxEngine, DataFlow.ComputeNode.Engine">
          </type>
          
          <type type="AISTek.DataFlow.ComputeNode.Classes.IWrapperFactory, DataFlow.ComputeNode.Classes"
                mapTo="AISTek.DataFlow.ComputeNode.Service.WrapperFactory, DataFlow.ComputeNode.Service">
          </type>
        </types>
      </container>
    </containers>
  </unity>

  <dataflow>
    <computeNode sandbox="AISTek.DataFlow.ComputeNode.Engine.GeneralEngine, DataFlow.ComputeNode.Engine">      
    </computeNode>
  </dataflow>

  <system.serviceModel>
    <behaviors>
      <endpointBehaviors>
        <behavior name="RESTBehavior">
          <webHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="AISTek.DataFlow.ComputeNode.Service.WebView.WebInterfaceBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>    
      
    </behaviors>
    <services>
      <service behaviorConfiguration="AISTek.DataFlow.ComputeNode.Service.WebView.WebInterfaceBehavior"
               name="AISTek.DataFlow.ComputeNode.Service.WebView.WebInterface">
        <endpoint address=""
                  behaviorConfiguration="RESTBehavior"
                  binding="webHttpBinding"
                  name="AISTek.DataFlow.ComputeNode.Service.WebView.WebInterface"
                  contract="AISTek.DataFlow.ComputeNode.Service.WebView.IWebInterface">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        <endpoint address="mex"
                  binding="mexHttpBinding"
                  name="mex"
                  contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8081/DataFlow/ComputeNode" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <bindings>
      <wsHttpBinding>
      <binding name="WSHttpBinding_IRepositoryService"
               closeTimeout="00:01:00"
               openTimeout="00:01:00"
               receiveTimeout="00:10:00"
               sendTimeout="00:01:00"
               bypassProxyOnLocal="false"
               transactionFlow="false"
               hostNameComparisonMode="StrongWildcard"
               maxBufferPoolSize="524288"
               maxReceivedMessageSize="67108864"
               messageEncoding="Mtom"
               textEncoding="utf-8"
               useDefaultWebProxy="true"
               allowCookies="false">
        <readerQuotas maxDepth="32"
                      maxStringContentLength="67108864"
                      maxArrayLength="67108864"
                      maxBytesPerRead="4096"
                      maxNameTableCharCount="67108864" />
        <reliableSession ordered="true"
                         inactivityTimeout="00:10:00"
                         enabled="false" />
        <security mode="Message">
          <transport clientCredentialType="Windows"
                     proxyCredentialType="None"
                     realm="" />
          <message clientCredentialType="Windows"
                   negotiateServiceCredential="true"
                   algorithmSuite="Default" />
        </security>
      </binding>
      </wsHttpBinding>

      <wsDualHttpBinding>
        <binding name="WSDualHttpBinding_ITaskProvider"
                 closeTimeout="00:10:00"
                 openTimeout="00:10:00"
                 receiveTimeout="Infinite"
                 sendTimeout="Infinite"
                 bypassProxyOnLocal="false"
                 transactionFlow="false"
                 hostNameComparisonMode="StrongWildcard"
                 maxBufferPoolSize="524288"
                 maxReceivedMessageSize="65536"
                 messageEncoding="Text"
                 textEncoding="utf-8"
                 useDefaultWebProxy="true">
          <!--<readerQuotas maxDepth="32"
                        maxStringContentLength="8192"
                        maxArrayLength="16384"
                        maxBytesPerRead="4096"
                        maxNameTableCharCount="16384" />
          <reliableSession ordered="true"
                           inactivityTimeout="00:10:00" />
          <security mode="Message">
            <message clientCredentialType="Windows"
                     negotiateServiceCredential="true"
                     algorithmSuite="Default" />
          </security>-->
        </binding>
        
        
      </wsDualHttpBinding>      
    </bindings>

    <client>      
      <endpoint address="http://localhost:8080/Scheduler/TaskProvider.svc"
                binding="wsDualHttpBinding"
                bindingConfiguration="WSDualHttpBinding_ITaskProvider"
                contract="DataFlow.Scheduler.ITaskProvider"
                name="DataFlow.Scheduler.ITaskProvider">
        <identity>
          <dns value="localhost" />
        </identity>
      </endpoint>
      
      <endpoint address="http://localhost:8080/Repository/Repository.svc"
                binding="wsHttpBinding"
                bindingConfiguration="WSHttpBinding_IRepositoryService"
                contract="DataFlow.Repository.IRepositoryService"
                name="DataFlow.Repository.IRepositoryService">
        <identity>
          <!--<servicePrincipalName value="host/BersHome" />-->
          <dns value="localhost" />
        </identity>
      </endpoint>
    </client>
  </system.serviceModel>

</configuration>