<?xml version="1.0"?>
<configuration>

  <configSections>
    <sectionGroup name="system.web.extensions" 
                  type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <sectionGroup name="scripting" 
                    type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
        <section name="scriptResourceHandler" 
                 type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" 
                 requirePermission="false"
                 allowDefinition="MachineToApplication"/>
        <sectionGroup name="webServices"
                      type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
          <section name="jsonSerialization"
                   type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" 
                   requirePermission="false" 
                   allowDefinition="Everywhere" />
          <section name="profileService" 
                   type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"
                   requirePermission="false" 
                   allowDefinition="MachineToApplication" />
          <section name="authenticationService" 
                   type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"
                   requirePermission="false" 
                   allowDefinition="MachineToApplication" />
          <section name="roleService" 
                   type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" 
                   requirePermission="false"
                   allowDefinition="MachineToApplication" />
        </sectionGroup>
      </sectionGroup>
    </sectionGroup>
    <section name="loggingConfiguration"
           type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="exceptionHandling"
             type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="dataConfiguration"
             type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="unity"
             type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <sectionGroup name="dataflow">
      <section name="scheduler"
               allowDefinition="Everywhere"
               type="AISTek.DataFlow.MasterNode.Scheduler.Configuration.SchedulerConfigurationSection, DataFlow.MasterNode.Scheduler"/>
    </sectionGroup>
  </configSections>

  <!--  Microsoft Logging configuration  -->
  <loggingConfiguration name="Logging Application Block"
                        tracingEnabled="true"
                        defaultCategory="General"
                        logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add source="AISTek DataFlow TaskServices"
           formatter="Log text formatter"
           log="Application"
           machineName=""
           listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging"
           traceOutputOptions="Timestamp"
           filter="All"
           type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging"
           name="EventLog TraceListener" />
    </listeners>
    <formatters>
      <add template="Timestamp: {timestamp}&#xD;&#xA;Message: {message}&#xD;&#xA;Category: {category}&#xD;&#xA;Priority: {priority}&#xD;&#xA;EventId: {eventid}&#xD;&#xA;Severity: {severity}&#xD;&#xA;Title:{title}&#xD;&#xA;Machine: {machine}&#xD;&#xA;Application Domain: {appDomain}&#xD;&#xA;Process Id: {processId}&#xD;&#xA;Process Name: {processName}&#xD;&#xA;Win32 Thread Id: {win32ThreadId}&#xD;&#xA;Thread Name: {threadName}&#xD;&#xA;Extended Properties: {dictionary({key} - {value}&#xD;&#xA;)}"
           type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
           name="Log text formatter" />
    </formatters>
    <categorySources>
      <add switchValue="Critical"
           name="Critical errors">
        <listeners>
          <add name="EventLog TraceListener" />
        </listeners>
      </add>
      <add switchValue="All"
           name="General">
        <listeners>
          <add name="EventLog TraceListener" />
        </listeners>
      </add>
      <add switchValue="All"
           name="Information">
        <listeners>
          <add name="EventLog TraceListener" />
        </listeners>
      </add>
      <add switchValue="All"
           name="System.ServiceModel">
        <listeners>
          <add name="EventLog TraceListener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All"
                 name="All Events">
        <listeners>
          <add name="EventLog TraceListener" />
        </listeners>
      </allEvents>
      <notProcessed switchValue="All"
                    name="Unprocessed Category" />
      <errors switchValue="All"
              name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="EventLog TraceListener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>

  <exceptionHandling>
    <exceptionPolicies>
      <add name="Core policy">
        <exceptionTypes>
          <add type="System.Web.HttpException, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
               postHandlingAction="NotifyRethrow"
               name="HttpException" />
          <add type="System.Threading.ThreadAbortException, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
               postHandlingAction="NotifyRethrow"
               name="ThreadAbortException" />
        </exceptionTypes>
      </add>
      <add name="Service policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
               postHandlingAction="NotifyRethrow"
               name="Exception">
            <exceptionHandlers>
              <add logCategory="Critical errors"
                   eventId="100"
                   severity="Critical"
                   title="AISTek DataFlow TaskServices"
                   formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"
                   priority="0"
                   useDefaultLogger="false"
                   type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                   name="Logging Handler" />
            </exceptionHandlers>
          </add>
          <add type="System.ServiceModel.CommunicationException, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
               postHandlingAction="NotifyRethrow"
               name="CommunicationException">
            <exceptionHandlers>
              <add logCategory="System.ServiceModel"
                   eventId="100"
                   severity="Warning"
                   title="AISTek DataFlow TaskServices"
                   formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                   priority="0"
                   useDefaultLogger="false"
                   type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                   name="Logging Handler" />
            </exceptionHandlers>
          </add>
          <add type="System.InvalidOperationException, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
               postHandlingAction="None"
               name="InvalidOperationException">
            <exceptionHandlers>
              <add logCategory="System.ServiceModel"
                   eventId="100"
                   severity="Error"
                   title="AISTek DataFlow TaskServices"
                   formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                   priority="0"
                   useDefaultLogger="false"
                   type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                   name="Logging Handler" />
            </exceptionHandlers>
          </add>
          <add type="System.NullReferenceException, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
               postHandlingAction="NotifyRethrow"
               name="NullReferenceException">
            <exceptionHandlers>
              <add logCategory="System.ServiceModel"
                   eventId="100"
                   severity="Error"
                   title="AISTek DataFlow TaskServices"
                   formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.XmlExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                   priority="0"
                   useDefaultLogger="false"
                   type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                   name="Logging Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  
  <connectionStrings>
    <add name="Logs SQL Server"
         connectionString="Data Source=localhost;Initial Catalog=DFMaster.Logs;Persist Security Info=True;User ID=sa;Password=empty"
         providerName="System.Data.SqlClient" />
    <add name="Repository SQL Server"
         connectionString="Data Source=BERSHOME;Initial Catalog=DFMaster.Repository;Persist Security Info=True;User ID=sa;Password=empty;MultipleActiveResultSets=True"
         providerName="System.Data.SqlClient" />
    <add name="Repository Entities Connection"
         connectionString="metadata=res://*/RepositoryModel.csdl|res://*/RepositoryModel.ssdl|res://*/RepositoryModel.msl;provider={0};provider connection string=&quot;{1}&quot;"
         providerName="System.Data.EntityClient" />
    <add name="RepositoryEntities"
         connectionString="metadata=res://*/RepositoryModel.csdl|res://*/RepositoryModel.ssdl|res://*/RepositoryModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=BERSHOME;Initial Catalog=DFMaster.Repository;Persist Security Info=True;User ID=sa;Password=empty;MultipleActiveResultSets=True&quot;"
         providerName="System.Data.EntityClient" />
  </connectionStrings>
  
  <!--  Microsoft Unity configuration  -->
  <unity>
    <typeAliases>
      <typeAlias alias="singleton"
                 type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
    </typeAliases>
    <containers>
      <container>
        <types>
          <type type="AISTek.DataFlow.MasterNode.Repository.IRepository, DataFlow.MasterNode.Repository"
                mapTo="AISTek.DataFlow.MasterNode.Repository.Repository, DataFlow.MasterNode.Repository">
            <lifetime type="singleton" />
          </type>
          <type type="AISTek.DataFlow.MasterNode.Repository.IFileClassesConverter, DataFlow.MasterNode.Repository"
                mapTo="AISTek.DataFlow.MasterNode.Repository.FileClassesConverter, DataFlow.MasterNode.Repository" />

          <type type="AISTek.DataFlow.MasterNode.Scheduler.IJobScheduler, DataFlow.MasterNode.Scheduler"
                mapTo="AISTek.DataFlow.MasterNode.Scheduler.JobScheduler, DataFlow.MasterNode.Scheduler">
            <lifetime type="singleton" />
          </type>
          <type type="AISTek.DataFlow.MasterNode.Scheduler.ITaskQueue, DataFlow.MasterNode.Scheduler, Version=0.1.1025.201, Culture=neutral"
                mapTo="AISTek.DataFlow.MasterNode.Scheduler.TaskQueue, DataFlow.MasterNode.Scheduler">
            <lifetime type="singleton" />
          </type>
          <type type="AISTek.DataFlow.MasterNode.Scheduler.JobBuilder.IJobBuildingPipeline, DataFlow.MasterNode.Scheduler"
                mapTo="AISTek.DataFlow.MasterNode.Scheduler.JobBuilder.JobBuildingPipeline, DataFlow.MasterNode.Scheduler">
            <lifetime type="singleton" />
          </type>
          <type type="AISTek.DataFlow.MasterNode.Scheduler.Configuration.ISchedulerConfiguration, DataFlow.MasterNode.Scheduler"
                mapTo="AISTek.DataFlow.MasterNode.Scheduler.Configuration.SchedulerConfiguration, DataFlow.MasterNode.Scheduler" />
        </types>
      </container>
    </containers>
  </unity>

  <dataflow>
    <scheduler>
      <pipeline>
        <add type="AISTek.DataFlow.MasterNode.Scheduler.JobBuilder.JobStateInitializationStrategy, DataFlow.MasterNode.Scheduler"  />
        <add type="AISTek.DataFlow.MasterNode.Scheduler.JobBuilder.JobGraphCompletionStrategy, DataFlow.MasterNode.Scheduler"  />
        <add type="AISTek.DataFlow.MasterNode.Scheduler.JobBuilder.JobGraphCyclesValidationStrategy, DataFlow.MasterNode.Scheduler"  />
      </pipeline>
      <taskProvider pingTimeout="0:00:05"/>
    </scheduler>
  </dataflow>

  <system.serviceModel>
    <diagnostics>
      <messageLogging logEntireMessage="true"
                      logMalformedMessages="true"
                      logMessagesAtTransportLevel="true"
                      logMessagesAtServiceLevel="true" />

    </diagnostics>
    <bindings>
      <basicHttpBinding>
        <binding name="RepositoryBinding"
                 closeTimeout="00:01:00"
                 openTimeout="0:01:00"
                 receiveTimeout="0:10:00"
                 sendTimeout="0:10:00"
                 transferMode="Streamed"
                 messageEncoding="Mtom"
                 maxBufferSize="65536"
                 maxReceivedMessageSize="134217728">
          <readerQuotas maxBytesPerRead="65536"/>
          <security mode="None">
            <transport clientCredentialType="None"/>
          </security>
        </binding>
      </basicHttpBinding>
      <wsDualHttpBinding>
        <binding name="AISTek.DataFlow.MasterNode.Scheduler.JobManagerBinding" />
      </wsDualHttpBinding>
      <wsHttpBinding>
        <binding name="TaskProviderBinding"
                 closeTimeout="0:00:10"
                 openTimeout="0:00:30"
                 receiveTimeout="0:01:00"
                 sendTimeout="0:00:10"
                 allowCookies="true"  >
          <security mode="Message" />
        </binding>
      </wsHttpBinding>
    </bindings>
    <services>
      <service name="DataFlow.Repository.IRepositoryService"
               behaviorConfiguration="AISTek.DataFlow.MasterNode.Repository.RepositoryServiceBehavior">
        <!-- Service Endpoints -->
        <endpoint address=""
                  binding="basicHttpBinding"
                  bindingConfiguration="RepositoryBinding"
                  contract="DataFlow.Repository.IRepositoryService">
        </endpoint>
        <endpoint address="mex"
                  binding="mexHttpBinding"
                  contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="AISTek.DataFlow.MasterNode.Scheduler.TaskProviderBehavior"
               name="DataFlow.Scheduler.ITaskProvider">
        <endpoint address=""
                  binding="wsHttpBinding"
                  bindingConfiguration="TaskProviderBinding"
                  contract="DataFlow.Scheduler.ITaskProvider">
        </endpoint>
        <endpoint address="mex"
                  binding="mexHttpBinding"
                  contract="IMetadataExchange" />
      </service>
      <service behaviorConfiguration="AISTek.DataFlow.MasterNode.Scheduler.JobManagerBehavior"
               name="DataFlow.Scheduler.IJobManager">
        <endpoint address=""
                  binding="wsDualHttpBinding"
                  bindingConfiguration="AISTek.DataFlow.MasterNode.Scheduler.JobManagerBinding"
                  contract="DataFlow.Scheduler.IJobManager">
        </endpoint>
        <endpoint address="mex"
                  binding="mexHttpBinding"
                  contract="IMetadataExchange" />
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="AISTek.DataFlow.MasterNode.Repository.RepositoryServiceBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="AISTek.DataFlow.MasterNode.Scheduler.TaskProviderBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="AISTek.DataFlow.MasterNode.Scheduler.JobManagerBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>

  <system.web>
    <customErrors mode="Off" />
    
    <compilation debug="true">
      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>
    </compilation>

    <authentication mode="None" />
    
    <pages>
      <controls>
        <add tagPrefix="asp" 
             namespace="System.Web.UI" 
             assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add tagPrefix="asp" 
             namespace="System.Web.UI.WebControls"
             assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      </controls>
    </pages>

    <httpHandlers>
      <remove verb="*"
              path="*.asmx"/>
      <add verb="*" 
           path="*.asmx" 
           validate="false" 
           type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="*" 
           path="*_AppService.axd" 
           validate="false" 
           type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add verb="GET,HEAD"
           path="ScriptResource.axd"
           type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>
    </httpHandlers>
    <httpModules>
      <add name="ScriptModule"
           type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </httpModules>
  </system.web>

  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" 
                extension=".cs"
                warningLevel="4"
                type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" 
                        value="v3.5"/>
        <providerOption name="WarnAsError"
                        value="false"/>
      </compiler>
    </compilers>
  </system.codedom>

  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules>
      <remove name="ScriptModule" />
      <add name="ScriptModule" 
           preCondition="managedHandler" 
           type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
    </modules>
    <handlers>
      <remove name="WebServiceHandlerFactory-Integrated"/>
      <remove name="ScriptHandlerFactory" />
      <remove name="ScriptHandlerFactoryAppServices" />
      <remove name="ScriptResource" />
      <add name="ScriptHandlerFactory" 
           verb="*" 
           path="*.asmx" 
           preCondition="integratedMode"
           type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="ScriptHandlerFactoryAppServices"
           verb="*" 
           path="*_AppService.axd" 
           preCondition="integratedMode"
           type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
      <add name="ScriptResource" 
           preCondition="integratedMode" 
           verb="GET,HEAD" 
           path="ScriptResource.axd"
           type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </handlers>
  </system.webServer>
  
  <runtime>
    <assemblyBinding appliesTo="v2.0.50727"
                     xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions"
                          publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0"
                         newVersion="3.5.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions.Design"
                          publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0"
                         newVersion="3.5.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

</configuration>
