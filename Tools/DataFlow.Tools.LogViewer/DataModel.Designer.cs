//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AISTek.DataFlow.Tools.LogViewer.Model", "FK_CategoryLog_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AISTek.DataFlow.Tools.LogViewer.Category), "CategoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AISTek.DataFlow.Tools.LogViewer.CategoryLog))]
[assembly: EdmRelationshipAttribute("AISTek.DataFlow.Tools.LogViewer.Model", "FK_CategoryLog_Log", "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AISTek.DataFlow.Tools.LogViewer.Log), "CategoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AISTek.DataFlow.Tools.LogViewer.CategoryLog))]

#endregion

namespace AISTek.DataFlow.Tools.LogViewer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LogsConnection : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LogsConnection object using the connection string found in the 'LogsConnection' section of the application configuration file.
        /// </summary>
        public LogsConnection() : base("name=LogsConnection", "LogsConnection")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LogsConnection object.
        /// </summary>
        public LogsConnection(string connectionString) : base(connectionString, "LogsConnection")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LogsConnection object.
        /// </summary>
        public LogsConnection(EntityConnection connection) : base(connection, "LogsConnection")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryLog> CategoryLogs
        {
            get
            {
                if ((_CategoryLogs == null))
                {
                    _CategoryLogs = base.CreateObjectSet<CategoryLog>("CategoryLogs");
                }
                return _CategoryLogs;
            }
        }
        private ObjectSet<CategoryLog> _CategoryLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryLogs(CategoryLog categoryLog)
        {
            base.AddObject("CategoryLogs", categoryLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int ClearLogs()
        {
            return base.ExecuteFunction("ClearLogs");
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AISTek.DataFlow.Tools.LogViewer.Model", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String name)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AISTek.DataFlow.Tools.LogViewer.Model", "FK_CategoryLog_Category", "CategoryLog")]
        public EntityCollection<CategoryLog> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryLog>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Category", "CategoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryLog>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Category", "CategoryLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AISTek.DataFlow.Tools.LogViewer.Model", Name="CategoryLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static CategoryLog CreateCategoryLog(global::System.Int32 id)
        {
            CategoryLog categoryLog = new CategoryLog();
            categoryLog.Id = id;
            return categoryLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AISTek.DataFlow.Tools.LogViewer.Model", "FK_CategoryLog_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AISTek.DataFlow.Tools.LogViewer.Model", "FK_CategoryLog_Log", "Log")]
        public Log Log
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Log", "Log").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Log", "Log").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Log> LogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Log", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Log>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Log", "Log", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AISTek.DataFlow.Tools.LogViewer.Model", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="severity">Initial value of the Severity property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="appDomainName">Initial value of the AppDomainName property.</param>
        /// <param name="processId">Initial value of the ProcessId property.</param>
        /// <param name="processName">Initial value of the ProcessName property.</param>
        public static Log CreateLog(global::System.Int32 id, global::System.Int32 priority, global::System.String severity, global::System.String title, global::System.DateTime timestamp, global::System.String machineName, global::System.String appDomainName, global::System.String processId, global::System.String processName)
        {
            Log log = new Log();
            log.Id = id;
            log.Priority = priority;
            log.Severity = severity;
            log.Title = title;
            log.Timestamp = timestamp;
            log.MachineName = machineName;
            log.AppDomainName = appDomainName;
            log.ProcessId = processId;
            log.ProcessName = processName;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EventId;
        partial void OnEventIdChanging(Nullable<global::System.Int32> value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Severity
        {
            get
            {
                return _Severity;
            }
            set
            {
                OnSeverityChanging(value);
                ReportPropertyChanging("Severity");
                _Severity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Severity");
                OnSeverityChanged();
            }
        }
        private global::System.String _Severity;
        partial void OnSeverityChanging(global::System.String value);
        partial void OnSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AppDomainName
        {
            get
            {
                return _AppDomainName;
            }
            set
            {
                OnAppDomainNameChanging(value);
                ReportPropertyChanging("AppDomainName");
                _AppDomainName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AppDomainName");
                OnAppDomainNameChanged();
            }
        }
        private global::System.String _AppDomainName;
        partial void OnAppDomainNameChanging(global::System.String value);
        partial void OnAppDomainNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcessId
        {
            get
            {
                return _ProcessId;
            }
            set
            {
                OnProcessIdChanging(value);
                ReportPropertyChanging("ProcessId");
                _ProcessId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcessId");
                OnProcessIdChanged();
            }
        }
        private global::System.String _ProcessId;
        partial void OnProcessIdChanging(global::System.String value);
        partial void OnProcessIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcessName
        {
            get
            {
                return _ProcessName;
            }
            set
            {
                OnProcessNameChanging(value);
                ReportPropertyChanging("ProcessName");
                _ProcessName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcessName");
                OnProcessNameChanged();
            }
        }
        private global::System.String _ProcessName;
        partial void OnProcessNameChanging(global::System.String value);
        partial void OnProcessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThreadName
        {
            get
            {
                return _ThreadName;
            }
            set
            {
                OnThreadNameChanging(value);
                ReportPropertyChanging("ThreadName");
                _ThreadName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThreadName");
                OnThreadNameChanged();
            }
        }
        private global::System.String _ThreadName;
        partial void OnThreadNameChanging(global::System.String value);
        partial void OnThreadNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Win32ThreadId
        {
            get
            {
                return _Win32ThreadId;
            }
            set
            {
                OnWin32ThreadIdChanging(value);
                ReportPropertyChanging("Win32ThreadId");
                _Win32ThreadId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Win32ThreadId");
                OnWin32ThreadIdChanged();
            }
        }
        private global::System.String _Win32ThreadId;
        partial void OnWin32ThreadIdChanging(global::System.String value);
        partial void OnWin32ThreadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormattedMessage
        {
            get
            {
                return _FormattedMessage;
            }
            set
            {
                OnFormattedMessageChanging(value);
                ReportPropertyChanging("FormattedMessage");
                _FormattedMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormattedMessage");
                OnFormattedMessageChanged();
            }
        }
        private global::System.String _FormattedMessage;
        partial void OnFormattedMessageChanging(global::System.String value);
        partial void OnFormattedMessageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AISTek.DataFlow.Tools.LogViewer.Model", "FK_CategoryLog_Log", "CategoryLog")]
        public EntityCollection<CategoryLog> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryLog>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Log", "CategoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryLog>("AISTek.DataFlow.Tools.LogViewer.Model.FK_CategoryLog_Log", "CategoryLog", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
